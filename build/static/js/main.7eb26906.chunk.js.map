{"version":3,"sources":["components/Header.js","Helper.js","components/Formulario.js","components/Resultado.js","components/Resumen.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primeraMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","console","log","incremento","calcularMarca","parseFloat","calcularPlan","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","Mensaje","p","ResultadoCotizacion","MensajeCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","ContenedorResumen","Resumen","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7eb26906.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFF;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n\r\n`;\r\n\r\nconst Header = ({titulo}) => {\r\n    return (\r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\nexport default Header;","// Obtiene la diferencia de años\r\nexport function obtenerDiferenciaYear(year){\r\n     return new Date().getFullYear() - year;\r\n}\r\n\r\n// calcula el total a pagar segun la marca\r\n\r\nexport function calcularMarca(marca){\r\n    let incremento;\r\n    switch(marca){\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'asiatico':\r\n            incremento= 1.05;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return incremento;\r\n}\r\n\r\n// calcular el total a pagar segun el plan\r\nexport function calcularPlan(plan){\r\n    return (plan ==='basico') ? 1.20 : 1.50;\r\n\r\n}\r\n\r\n// Muestra la primera letra en mayuscula\r\nexport function primeraMayuscula(texto){\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import React,{useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\nimport {obtenerDiferenciaYear, calcularMarca, calcularPlan} from '../Helper';\r\n\r\n// Styled Components\r\nconst Campo = styled.div`\r\n    display:flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    border: 1px solid #e1e1e1;\r\n    -webkit-appearance: none;\r\n`;\r\n\r\nconst  InputRadio = styled.input`\r\n  margin:  0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n  background-color: #00838F;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  border: none;\r\n  transition: background-color .3s ease;\r\n  margin-top: 2rem;\r\n\r\n  &:hover{\r\n    cursor: pointer;\r\n    background-color: #26C6DA;\r\n  }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red;\r\n  color: white;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Formulario = ({guardarResumen, guardarCargando}) => {\r\n\r\n  const[datos, guardarDatos] = useState({\r\n    marca: '',\r\n    year: '',\r\n    plan: ''\r\n  });\r\n\r\n  const [error, guardarError] = useState(false);\r\n\r\n    // Extraer los valores del state\r\n  const { marca, year,plan} = datos;\r\n\r\n  // leer los datos del formulario\r\n  const obtenerInformacion = e =>{\r\n    guardarDatos({\r\n      ...datos,\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n  // Cuando el usuario envía el formulario\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if(marca.trim()==='' || year.trim()==='' || plan.trim()===''){\r\n      guardarError(true);\r\n      return;\r\n    }\r\n    guardarError(false);\r\n\r\n    // inicia con una base de 2000\r\n    let resultado = 2000;\r\n    // Obtener la diferencia\r\n    const diferencia = obtenerDiferenciaYear(year);\r\n    console.log(diferencia);\r\n    // Por cada año meor se resta el 3%\r\n    resultado -= ((diferencia * 3)/100)*resultado;\r\n\r\n    // Americano 15%\r\n    // Asiatico 5%\r\n    //Europeo 30%\r\n    resultado = calcularMarca(marca) * resultado;\r\n    // Basico aumenta 20%\r\n    // Completo 50%\r\n    resultado = parseFloat(calcularPlan(plan) * resultado).toFixed(2);\r\n    console.log(resultado);\r\n    //Muestra el spinner de cargando\r\n    guardarCargando(true);\r\n    // espera 2 segundos para ejecutar lo que esta dentro del callback\r\n    setTimeout(()=>{\r\n      //Elimina el spinner de cargando\r\n      guardarCargando(false);\r\n      // Envía la información al componente Principal\r\n      guardarResumen({\r\n        cotizacion: Number(resultado),\r\n        datos\r\n      });\r\n    },1500);\r\n\r\n  }\r\n\r\n  //\r\n  return (\r\n    <form\r\n      onSubmit = {handleSubmit}\r\n    >\r\n      {error ? <Error>Todos los campos son obligatorios</Error> : null}\r\n      <Campo>\r\n        <Label>Marca</Label>\r\n        <Select\r\n          name= \"marca\"\r\n          value= {marca}\r\n          onChange={obtenerInformacion}\r\n        >\r\n          <option value=\"\">--- Seleccione ---</option>\r\n          <option value=\"americano\">Americano</option>\r\n          <option value=\"europeo\">Europeo</option>\r\n          <option value=\"asiatico\">Asiático</option>\r\n        </Select>\r\n      </Campo>\r\n      <Campo>\r\n        <Label>Año</Label>\r\n        <Select\r\n          name= \"year\"\r\n          value= {year}\r\n          onChange={obtenerInformacion}\r\n        >\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2018\">2018</option>\r\n          <option value=\"2017\">2017</option>\r\n          <option value=\"2016\">2016</option>\r\n          <option value=\"2015\">2015</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2012\">2012</option>\r\n        </Select>\r\n      </Campo>\r\n\r\n      <Campo>\r\n        <Label>Plan</Label>\r\n        <InputRadio type=\"radio\" name=\"plan\" value=\"basico\" checked={plan ===\"basico\"} onChange={obtenerInformacion} />\r\n        Básico\r\n        <InputRadio type=\"radio\" name=\"plan\" value=\"completo\" checked={plan ===\"completo\"} onChange={obtenerInformacion}/>\r\n        Completo\r\n      </Campo>\r\n\r\n      <Boton type=\"submit\">Cotizar</Boton>\r\n    </form>\r\n  );\r\n};\r\n\r\nFormulario.propTypes = {\r\n  guardarResumen: PropTypes.func.isRequired,\r\n  guardarCargando: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127,224,237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding:.5rem;\r\n    border: 1px solid #26C6DA;\r\n    background-color: rgb(127,224,237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\nconst MensajeCotizacion = styled.p`\r\n    color: #00838F;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`;\r\n\r\nconst Resultado = ({cotizacion}) => {\r\n    return (\r\n        (cotizacion === 0) ? <Mensaje>Elige Marca, año y tipo de Seguro</Mensaje>\r\n        :(\r\n            <ResultadoCotizacion>\r\n               <TransitionGroup\r\n                component=\"span\"\r\n                className=\"resultado\"\r\n               >\r\n                   <CSSTransition\r\n                    classNames=\"resultado\"\r\n                    key={cotizacion}\r\n                    timeout={{enter:500, exit:500}}\r\n                   >\r\n                    <MensajeCotizacion>El total es: <span>${cotizacion}</span></MensajeCotizacion>\r\n                   </CSSTransition>\r\n               </TransitionGroup>\r\n            </ResultadoCotizacion>\r\n        ) \r\n    );\r\n};\r\n\r\nResultado.propTypes ={\r\n    cotizacion: PropTypes.number.isRequired\r\n}\r\nexport default Resultado;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport {primeraMayuscula} from '../Helper';\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #FFF;\r\n    margin-top: 1rem;\r\n\r\n`;\r\n\r\nconst Resumen = ({datos}) => {\r\n\r\n    // extraer de datos\r\n    const {marca,year,plan} = datos;\r\n    if(marca==='' || year==='' || plan==='') return null;\r\n\r\n    return (\r\n        <ContenedorResumen>\r\n            <h2>Resumen de cotización</h2>\r\n            <ul>\r\n                <li>Marca: {primeraMayuscula(marca)}</li>\r\n                <li>Año: {primeraMayuscula(year)}</li>\r\n                <li>Plan: {primeraMayuscula(plan)}</li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    );\r\n};\r\n\r\nResumen.propTypes = {\r\n    datos: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Resumen;","import React from \"react\";\r\nimport './spinner.css';\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"double-bounce1\"></div>\r\n      <div className=\"double-bounce2\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Resultado from \"./components/Resultado\";\nimport Resumen from \"./components/Resumen\";\nimport Spinner from \"./components/Spinner\";\nimport styled from \"@emotion/styled\";\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFF;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n\n  const {cotizacion, datos} = resumen;\n  return (\n    <Contenedor>\n      <Header titulo=\"Cotizador de Seguros\" />\n\n      <ContenedorFormulario>\n        <Formulario\n          guardarResumen= {guardarResumen}\n          guardarCargando = {guardarCargando}\n        />\n        {cargando ? <Spinner/> : null}\n        <Resumen \n          datos = {datos}\n        />\n        {!cargando ?\n          <Resultado \n            cotizacion={cotizacion}\n          /> : null  \n        }\n      </ContenedorFormulario>\n\n    </Contenedor>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}